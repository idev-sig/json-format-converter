name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Install dependencies
      run: |
        npm ci

    - name: Build project
      run: |
        npm run build

    - name: Validate project
      run: |
        node scripts/validate.js

    - name: Generate changelog
      id: changelog
      run: |
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        echo "## JSON Format Converter v${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "A powerful Chrome extension and standalone web application for converting between JSON, JSONC, and JSON5 formats with advanced editing features and comment preservation." >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### Features" >> $GITHUB_OUTPUT
        echo "- Smart Format Conversion: JSON JSONC JSON5 with comment preservation" >> $GITHUB_OUTPUT
        echo "- Advanced Editor: CodeMirror with syntax highlighting and line numbers" >> $GITHUB_OUTPUT
        echo "- Multi-language Support: English and Chinese interfaces" >> $GITHUB_OUTPUT
        echo "- Comment Preservation: Maintains comments during JSONC JSON5 conversion" >> $GITHUB_OUTPUT
        echo "- Processing Tools: Format, compress, escape, and data type conversion" >> $GITHUB_OUTPUT
        echo "- Keyboard Shortcuts: Productivity-focused hotkeys" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### Installation" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "#### Chrome Extension" >> $GITHUB_OUTPUT
        echo "**Recommended**: [Install from Chrome Web Store](https://chromewebstore.google.com/detail/${{ vars.CHROME_EXTENSION_ID }})" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "**Manual Installation**:" >> $GITHUB_OUTPUT
        echo "1. Download `json-format-converter-chrome-v${{ steps.get_version.outputs.VERSION }}.zip`" >> $GITHUB_OUTPUT
        echo "2. Extract the ZIP file" >> $GITHUB_OUTPUT
        echo "3. Open Chrome and navigate to `chrome://extensions/`" >> $GITHUB_OUTPUT
        echo "4. Enable \"Developer mode\" in the top right" >> $GITHUB_OUTPUT
        echo "5. Click \"Load unpacked\" and select the extracted folder" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "#### Standalone Web App" >> $GITHUB_OUTPUT
        echo "**Online**: [https://idev-sig.github.io/json-format-converter/](https://idev-sig.github.io/json-format-converter/)" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "**Download**:" >> $GITHUB_OUTPUT
        echo "1. Download `json-format-converter-standalone-v${{ steps.get_version.outputs.VERSION }}.zip`" >> $GITHUB_OUTPUT
        echo "2. Extract to your web server or open `index.html` locally" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### Technical Information" >> $GITHUB_OUTPUT
        echo "- Extension ID: `${{ vars.CHROME_EXTENSION_ID }}`" >> $GITHUB_OUTPUT
        echo "- Manifest Version: 3" >> $GITHUB_OUTPUT
        echo "- Build Time: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_OUTPUT
        echo "- License: Apache 2.0" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### Documentation" >> $GITHUB_OUTPUT
        echo "- [English README](README.md)" >> $GITHUB_OUTPUT
        echo "- [README](README_zh.md)" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get_version.outputs.VERSION }}
        release_name: JSON Format Converter v${{ steps.get_version.outputs.VERSION }}
        body: ${{ steps.changelog.outputs.CHANGELOG }}
        draft: false
        prerelease: false

    - name: Upload Chrome ZIP to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./json-format-converter-chrome.zip
        asset_name: json-format-converter-chrome-v${{ steps.get_version.outputs.VERSION }}.zip
        asset_content_type: application/zip

    - name: Upload Firefox ZIP to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./json-format-converter-firefox.zip
        asset_name: json-format-converter-firefox-v${{ steps.get_version.outputs.VERSION }}.zip
        asset_content_type: application/zip

    - name: Upload Standalone ZIP to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./json-format-converter-standalone.zip
        asset_name: json-format-converter-standalone-v${{ steps.get_version.outputs.VERSION }}.zip
        asset_content_type: application/zip

    # Optional: Publish to Chrome Web Store (requires setup of secrets)
    # Uncomment and configure the following steps if you want to auto-publish to Chrome Web Store
    - name: Publish to Chrome Web Store
      uses: puzzlers-labs/chrome-webstore-publish@v1
      with:
        mode: publish
        extension_id: ${{ vars.CHROME_EXTENSION_ID }}
        zip_file_path: ./json-format-converter-chrome.zip
        client_id: ${{ secrets.GOOGLE_CLIENT_ID }}
        client_secret: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        refresh_token: ${{ secrets.GOOGLE_REFRESH_TOKEN }}
        publish_target: public
        expedited_review: true